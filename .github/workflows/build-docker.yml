name: Build docker

on:
  workflow_run:
    workflows: ["Update version"]
    types:
      - completed

env:
  DOCKER_IMAGE: python-template

jobs:
  docker_build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build Docker images for ${{ env.DOCKER_IMAGE }} ${{ secrets.RELEASE_VERSION }}.${{ secrets.MAJOR_VERSION }}.${{ secrets.MINOR_VERSION }} version
      run: docker build app  --tag ${{ secrets.DOCKER_REGISTRY }}/arsolute/${{ env.DOCKER_IMAGE }}:${{ secrets.RELEASE_VERSION }}.${{ secrets.MAJOR_VERSION }}.${{ secrets.MINOR_VERSION }}

    - name: Push Docker images for ${{ env.DOCKER_IMAGE }} ${{ secrets.RELEASE_VERSION }}.${{ secrets.MAJOR_VERSION }}.${{ secrets.MINOR_VERSION }} version
      run: docker push ${{ secrets.DOCKER_REGISTRY }}/arsolute/${{ env.DOCKER_IMAGE }}:${{ secrets.RELEASE_VERSION }}.${{ secrets.MAJOR_VERSION }}.${{ secrets.MINOR_VERSION }}

  # helm_deploy_staging:
  #   needs: [docker_build]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/staging'
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Deploy telegramcryptobot
  #     uses: WyriHaximus/github-action-helm3@v2
  #     with:
  #       exec: helm upgrade telegramcryptobot-staging-app ./helm/app -i -n telegramcryptobot-staging --recreate-pods
  #       kubeconfig: '${{ secrets.KUBECONFIG }}'

  # helm_deploy_prod:
  #   needs: [docker_build]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Deploy telegramcryptobot
  #     uses: WyriHaximus/github-action-helm3@v2
  #     with:
  #       exec: helm upgrade telegramcryptobot-prod-app ./helm/app -i -n telegramcryptobot-prod --recreate-pods
  #       kubeconfig: '${{ secrets.KUBECONFIG }}'