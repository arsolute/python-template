name: Build python image
on:
  push:
    branches:
      - main
      - staging

env:
  RELEASE_VERSION : 1
  MAJOR_VERSION: 0
  DOCKER_IMAGE: python-template

jobs:
  python_template:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    
    - name: Log in to Docker Hub
      uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
      with:
        registry: ${{ secrets.DOCKER_REGISTRY }}
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Build and push Docker images for ${{ env.DOCKER_IMAGE }} ${{ env.RELEASE_VERSION }}.${{ env.MAJOR_VERSION }}.${{ secrets.MINOR_VERSION }} version
    #   uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
    #   with:
    #     context: app
    #     push: true
    #     tags: ${{ secrets.DOCKER_REGISTRY }}/arsolute/${{ env.DOCKER_IMAGE }}:${{ env.RELEASE_VERSION }}.${{ env.MAJOR_VERSION }}.${{ secrets.MINOR_VERSION }}
    #     # labels: ${{ env.RELEASE_VERSION }}.${{ env.MAJOR_VERSION }}.${{ secrets.MINOR_VERSION }}
    #     # labels: 1.0.1

    - name: Build and push Docker images for ${{ env.DOCKER_IMAGE }} ${{ env.RELEASE_VERSION }}.${{ env.MAJOR_VERSION }}.${{ secrets.MINOR_VERSION }} version
      run: docker push ${{ secrets.DOCKER_REGISTRY }}/arsolute/${{ env.DOCKER_IMAGE }}:${{ env.RELEASE_VERSION }}.${{ env.MAJOR_VERSION }}.${{ secrets.MINOR_VERSION }}

    - name: Update Minor version
      uses: hmanzur/actions-set-secret@v2.0.0
      with:
        name: 'MINOR_VERSION'
        value: $((${{ secrets.MINOR_VERSION }}+1))
        repository: arsolute/${{ env.DOCKER_IMAGE }}
        token: ${{ secrets.ARSOLUTE_TOKEN }}

    - name: Current minor version
      run: echo "${{ secrets.MINOR_VERSION }}"

  # upgrade_version:
  #   needs: [rabbitmq_producer, client_sync, client_updater, chatparser]
  #   runs-on: ubuntu-latest
  #   # if: github.ref == 'refs/heads/staging'
  #   steps:
  #   - name: Update Minor version
  #     uses: hmanzur/actions-set-secret@v2.0.0
  #     with:
  #       name: 'MINOR'
  #       value: $((${{ secrets.MINOR }}+1))
  #       repository: xussof/telegramCryptoBot
  #       token: ${{ secrets.REPO_ACCESS_TOKEN }}

  #   - name: Current minor version
  # #     run: echo "${{ secrets.MINOR }}"

  # helm_deploy_staging:
  #   needs: [rabbitmq_producer, client_sync, client_updater, chatparser]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/staging'
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Deploy telegramcryptobot
  #     uses: WyriHaximus/github-action-helm3@v2
  #     with:
  #       exec: helm upgrade telegramcryptobot-staging-app ./helm/app -i -n telegramcryptobot-staging --recreate-pods
  #       kubeconfig: '${{ secrets.KUBECONFIG }}'

  # helm_deploy_prod:
  #   needs: [rabbitmq_producer, client_sync, client_updater, chatparser]
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #   - name: Checkout
  #     uses: actions/checkout@v2

  #   - name: Deploy telegramcryptobot
  #     uses: WyriHaximus/github-action-helm3@v2
  #     with:
  #       exec: helm upgrade telegramcryptobot-prod-app ./helm/app -i -n telegramcryptobot-prod --recreate-pods
  #       kubeconfig: '${{ secrets.KUBECONFIG }}'

  # upgrade_version:
  #   needs: [rabbitmq_producer, client_sync, client_updater, chatparser]
  #   runs-on: ubuntu-latest
  #   # if: github.ref == 'refs/heads/staging'
  #   steps:
  #   - name: Update Minor version
  #     uses: hmanzur/actions-set-secret@v2.0.0
  #     with:
  #       name: 'MINOR'
  #       value: $((${{ secrets.MINOR }}+1))
  #       repository: xussof/telegramCryptoBot
  #       token: ${{ secrets.REPO_ACCESS_TOKEN }}

  #   - name: Current minor version
  #     run: echo "${{ secrets.MINOR }}"
      